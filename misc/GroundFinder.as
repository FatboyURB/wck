package extras {		import Box2DAS.*;	import Box2DAS.Collision.*;	import Box2DAS.Collision.Shapes.*;	import Box2DAS.Common.*;	import Box2DAS.Dynamics.*;	import Box2DAS.Dynamics.Contacts.*;	import Box2DAS.Dynamics.Joints.*;	import cmodule.Box2D.*;	import wck.*;	import shapes.*;	import misc.*;	import extras.*;	import flash.utils.*;	import flash.events.*;	import flash.display.*;	import flash.text.*;	import flash.geom.*;		public class GroundFinder extends ContactList {				public var up:V2;		public var down:V2;		public var left:V2;		public var right:V2;				public var downContact:ContactEvent;		public var downDot:Number = 0;				public var timeTouching:uint = 0;		public var timeAirborne:uint = 0;				public var timeLeftAirborne:uint = 0;		public var timeRightAirborne:uint = 0;						public var ccwRollContact:ContactEvent;		public var cwRollContact:ContactEvent				public var cl:Array;				public function process(gravity:V2 = null):void {			down = gravity ? V2.normalize(gravity) : new V2(0, -1);			up = V2.multiplyN(dir.down, -1);			left = V2.cw90(dir.up);			right = V2.ccw90(dir.up);			cl = values;			if(cl.length > 0) {				var dt:Number;				var d:String;				var cw:V2 = new V2();				var ccw:V2 = new V2();				var c:ContactEvent;				for(var i:uint = 0; i < cl.length; ++i) {					c = cl[i];					/*for(var j:uint = 0; j < D.length; ++j) {						d = D[j];						dt = c.normal.dot(dir[d]);						if(i == 0 || dt > dot[d]) {							contact[d] = c;							dot[d] = dt;						}					}*/					cw.add(V2.cw90(c.normal));					ccw.add(V2.ccw90(c.normal));				}												var cwd:Number;				var ccwd:Number;				for(i = 0; i < cl.length; ++i) {					dt = cw.dot(cl[i].normal);					if(i == 0 || dt > cwd) {						roll.cw = cl[i];						cwd = dt;					}					dt = ccw.dot(cl[i].normal);					if(i == 0 || dt > ccwd) {						roll.ccw = cl[i];						ccwd = dt;					}				}								++timeTouching;				timeAirborne = 0;			}			else {				timeTouching = 0;				++timeAirborne;				++timeLeftAirborne;				++timeRightAirborne;			}		}	}}