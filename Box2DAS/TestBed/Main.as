package {	import Box2DAS.*;	import Box2DAS.Collision.*;	import Box2DAS.Collision.Shapes.*;	import Box2DAS.Common.*;	import Box2DAS.Dynamics.*;	import Box2DAS.Dynamics.Contacts.*;	import Box2DAS.Dynamics.Joints.*;	import flash.display.*;	import flash.events.*;	import flash.text.*;	import misc.*;		public class Main extends MovieClip {				public static const tests:Array = [Ragdoll, MyTest, TheoJansen];		public static var curTest:int = 0;		public static var test:Test = null;		public static var debug:b2DebugDraw;		public static var scale:Number = 30;		public var fps:FPS;				public static var aboutText:TextField;						public function Main() {						b2Base.initialize();			Input.initialize(stage);			debug = new b2DebugDraw(null, scale);			addChild(debug);									var txt:TextField = new TextField();			var fmt:TextFormat = new TextFormat("Arial", 16, 0, false, false, false);			fmt.align = TextFormatAlign.RIGHT;						txt.defaultTextFormat = fmt;			txt.x = 140;			txt.y = 4.5;			txt.width = 495;			txt.height = 61;			txt.text = "'Left'/'Right' arrows to go to previous/next example. \n'R' to reset.";			txt.mouseEnabled = false;			addChild(txt);						txt = new TextField();			txt.defaultTextFormat = fmt;			txt.x = 334;			txt.y = 71;			txt.width = 300;			txt.height = 30;			txt.mouseEnabled = false;			addChild(txt);			aboutText = txt;						txt = new TextField();			txt.defaultTextFormat = fmt;			fps = new FPS();			fps.startCalc(stage);			fps.display = txt;			txt.x = 7;			txt.y = 5;			addChild(txt);						stage.addEventListener(Event.ENTER_FRAME, handleEnterFrame);		}				private static function handleEnterFrame(e:Event):void		{			if (Input.kp('RIGHT')) {				++curTest;				test.destroy();				test = null;			}			else if (Input.kp('LEFT')) {				--curTest;				test.destroy();				test = null;			}			else if (Input.kp('R')) {				test.destroy();				test = null;			}			if (!test) {				curTest = (curTest + tests.length) % tests.length;				test = new tests[curTest]();				debug.world = test;			}			test.EnterFrame();			test.Step(1 / 30, 10, 10);			debug.Draw();		}	}}