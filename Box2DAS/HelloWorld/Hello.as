package {		import Box2DAS.*;	import Box2DAS.Collision.*;	import Box2DAS.Collision.Shapes.*;	import Box2DAS.Common.*;	import Box2DAS.Dynamics.*;	import Box2DAS.Dynamics.Contacts.*;	import Box2DAS.Dynamics.Joints.*;	import cmodule.Box2D.*;		import flash.display.*;	import flash.events.*;		import Box2DAS.Controllers.*;		public class Hello extends MovieClip {				public var world:b2World;		public var scale:Number = 30;		public var c:b2Controller;		public var db:b2DebugDraw;		public var lastBody:b2Body;						public function Hello() {			var be:b2BuoyancyEffect = new b2BuoyancyEffect();			be.density = 1.5;			be.offset = -300 / scale;			c = new b2Controller(be);			graphics.clear();			graphics.lineStyle(1, 0x0000ff);			graphics.moveTo(-2000, 300);			graphics.lineTo(2000, 300);			b2Base.initialize();			world = new b2World(new V2(0, 10));			db = new b2DebugDraw(world, scale);			addChild(db);			b2Def.body.type = b2Body.b2_dynamicBody;			b2Def.polygon.SetAsBox(5 / scale, 5 / scale);			b2Def.fixture.shape = b2Def.polygon;			b2Def.fixture.density = 1;			var body:b2Body;			var fix:b2Fixture;			for(var i:uint = 0; i < 100; ++i) {				b2Def.body.position.x = Math.random() * 550 / scale;				b2Def.body.position.y = Math.random() * 400 / scale;				b2Def.body.angularVelocity = Math.random() * 2 - 1;				body = world.CreateBody(b2Def.body);				fix = body.CreateFixture(b2Def.fixture);				fix.m_userData = {data: 'polygon!'}				c.AddBody(body);			}			b2Def.fixture.shape = b2Def.circle;			b2Def.circle.m_radius = 5 / scale;			for(i = 0; i < 100; ++i) {				b2Def.body.position.x = Math.random() * 550 / scale;				b2Def.body.position.y = Math.random() * 400 / scale;				b2Def.body.angularVelocity = Math.random() * 2 - 1;				body = world.CreateBody(b2Def.body);				fix = body.CreateFixture(b2Def.fixture);				fix.m_userData = {data: 'circle!'}				c.AddBody(body);				lastBody = body;			}			lastBody.SetActive(false);			stage.addEventListener(Event.ENTER_FRAME, handleEnterFrame);			stage.addEventListener(MouseEvent.MOUSE_DOWN, handleMouseDown);		}				public function handleMouseDown(e:MouseEvent):void {			lastBody.SetActive(!lastBody.IsActive());		}				public function handleEnterFrame(e:Event):void {			world.Step(1 / 30, 15, 15);			db.Draw();			//for(var b:b2Body = world.GetBodyList(); b; b = b.GetNext()) {			//	be.Apply(b);			//}			c.Step();			world.RayCast(function(fixture:b2Fixture, point:V2, normal:V2, fraction:Number):Number {				trace(fixture.m_userData.data);				return fraction;			}, new V2(-2000, 300 / scale), new V2(2000, 300 / scale));		}	}}